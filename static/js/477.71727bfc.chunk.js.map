{"version":3,"file":"static/js/477.71727bfc.chunk.js","mappings":"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","sources":["headers/headers.js","components/Form/Form.jsx","pages/homePage.jsx"],"sourcesContent":["const myHeaders = new Headers();\nmyHeaders.append(\"apikey\", \"5PVBKnyUWDzJyz5ksWX8Nf3NojAoUzIw\");\n\nconst requestOptions = {\n  method: \"GET\",\n  redirect: \"follow\",\n  headers: myHeaders,\n};\n\nexport default requestOptions;\n","import { Autocomplete, Box, TextField } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { CurrencyExchange } from \"@mui/icons-material\";\nimport { useState } from \"react\";\n\nimport requestOptions from \"headers/headers\";\n\nfunction Form({ currency }) {\n  const [value, setValue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [result, setResult] = useState(null);\n\n  const handleClick = () => {\n    setLoading(true);\n    fetch(\n      `https://api.apilayer.com/fixer/convert?to=${to}&from=${from}&amount=${value}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        setResult(result);\n        console.log(result);\n      })\n      .catch((error) => console.log(\"error\", error))\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          padding: 3,\n        }}\n      >\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={currency}\n          sx={{ width: 200 }}\n          renderInput={(params) => <TextField {...params} label=\"From\" />}\n          onChange={(e) => {\n            setFrom(e.target.textContent);\n          }}\n        />\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={currency}\n          sx={{ width: 200, mt: \"10px\" }}\n          renderInput={(params) => <TextField {...params} label=\"To\" />}\n          onChange={(e) => {\n            setTo(e.target.textContent);\n          }}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Sum\"\n          variant=\"outlined\"\n          value={value}\n          sx={{ width: 200, mt: \"10px\", mb: \"10px\" }}\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <LoadingButton\n          size=\"small\"\n          endIcon={<CurrencyExchange />}\n          loading={loading}\n          loadingPosition=\"end\"\n          variant=\"contained\"\n          onClick={handleClick}\n        >\n          Convert\n        </LoadingButton>\n\n        {result && (\n          <p style={{ marginTop: \"10px\" }}>Rate: {result?.info?.rate}</p>\n        )}\n        {result && <p>Result: {result?.result}</p>}\n      </Box>\n    </>\n  );\n}\n\nexport default Form;\n","import Form from \"components/Form/Form\";\nimport { useEffect, useState } from \"react\";\nimport requestOptions from \"headers\";\n\nconst HomePage = () => {\n  const [fetching, setFetching] = useState(false);\n  const [currency, setCurrency] = useState([]);\n\n  useEffect(() => {\n    setFetching(true);\n    fetch(\"https://api.apilayer.com/fixer/symbols\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        const currency = Object.keys(result.symbols);\n        setCurrency(currency);\n      })\n      .catch((error) => console.log(\"error\", error))\n      .finally(() => {\n        setFetching(false);\n      });\n  }, []);\n\n  return <>{fetching ? <div>Loading...</div> : <Form currency={currency} />}</>;\n};\n\nexport default HomePage;\n"],"names":["myHeaders","Headers","append","method","redirect","headers","currency","useState","value","setValue","loading","setLoading","from","setFrom","to","setTo","result","setResult","Box","sx","display","flexDirection","alignItems","padding","Autocomplete","disablePortal","id","options","width","renderInput","params","TextField","label","onChange","e","target","textContent","mt","variant","mb","LoadingButton","size","endIcon","CurrencyExchange","loadingPosition","onClick","fetch","requestOptions","then","response","json","console","log","catch","error","finally","style","marginTop","info","rate","fetching","setFetching","setCurrency","useEffect","Object","keys","symbols"],"sourceRoot":""}