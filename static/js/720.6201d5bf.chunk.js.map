{"version":3,"file":"static/js/720.6201d5bf.chunk.js","mappings":"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","sources":["headers/headers.js","components/Form/Form.jsx","currency/index.js","pages/homePage.jsx"],"sourcesContent":["const myHeaders = new Headers();\nmyHeaders.append('apikey', '5PVBKnyUWDzJyz5ksWX8Nf3NojAoUzIw');\n\nconst requestOptions = {\n  method: 'GET',\n  redirect: 'follow',\n  headers: myHeaders,\n};\n\nexport default requestOptions;\n","import { Autocomplete, Box, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { CurrencyExchange } from '@mui/icons-material';\nimport { useState } from 'react';\nimport requestOptions from 'headers/headers';\nimport { currencyObj } from 'currency';\nconst currency = Object.keys(currencyObj);\n\nfunction Form() {\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState('');\n  const [from, setFrom] = useState('');\n  const [to, setTo] = useState('');\n  const [result, setResult] = useState(null);\n\n  const handleClick = async () => {\n    setLoading(true);\n    await fetch(\n      `https://api.apilayer.com/exchangerates_data/convert?to=${to}&from=${from}&amount=${value}`,\n      requestOptions\n    )\n      .then(response => response.json())\n      .then(result => {\n        setResult(result);\n      })\n      .catch(error => console.log('error', error))\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          padding: 3,\n        }}\n      >\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={currency}\n          sx={{ width: 200 }}\n          renderInput={params => <TextField {...params} label=\"From\" />}\n          onChange={e => {\n            setFrom(e.target.textContent);\n          }}\n        />\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={currency}\n          sx={{ width: 200, mt: '10px' }}\n          renderInput={params => <TextField {...params} label={'To'} />}\n          onChange={e => {\n            setTo(e.target.textContent);\n          }}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Sum\"\n          variant=\"outlined\"\n          value={value}\n          sx={{ width: 200, mt: '10px', mb: '10px' }}\n          onChange={e => setValue(e.target.value)}\n        />\n        <LoadingButton\n          size=\"small\"\n          endIcon={<CurrencyExchange />}\n          loading={loading}\n          loadingPosition=\"end\"\n          variant=\"contained\"\n          onClick={handleClick}\n        >\n          Convert\n        </LoadingButton>\n\n        {result && (\n          <p style={{ marginTop: '10px' }}>\n            Rate: {Number(result?.info?.rate).toFixed(2)}\n          </p>\n        )}\n        {result && <p>Result: {Number(result?.result).toFixed(2)}</p>}\n      </Box>\n    </>\n  );\n}\n\nexport default Form;\n","export const currencyObj = {\n  AED: 'United Arab Emirates Dirham',\n  AFN: 'Afghan Afghani',\n  ALL: 'Albanian Lek',\n  AMD: 'Armenian Dram',\n  ANG: 'Netherlands Antillean Guilder',\n  AOA: 'Angolan Kwanza',\n  ARS: 'Argentine Peso',\n  AUD: 'Australian Dollar',\n  AWG: 'Aruban Florin',\n  AZN: 'Azerbaijani Manat',\n  BAM: 'Bosnia-Herzegovina Convertible Mark',\n  BBD: 'Barbadian Dollar',\n  BDT: 'Bangladeshi Taka',\n  BGN: 'Bulgarian Lev',\n  BHD: 'Bahraini Dinar',\n  BIF: 'Burundian Franc',\n  BMD: 'Bermudan Dollar',\n  BND: 'Brunei Dollar',\n  BOB: 'Bolivian Boliviano',\n  BRL: 'Brazilian Real',\n  BSD: 'Bahamian Dollar',\n  BTC: 'Bitcoin',\n  BTN: 'Bhutanese Ngultrum',\n  BWP: 'Botswanan Pula',\n  BYN: 'New Belarusian Ruble',\n  BYR: 'Belarusian Ruble',\n  BZD: 'Belize Dollar',\n  CAD: 'Canadian Dollar',\n  CDF: 'Congolese Franc',\n  CHF: 'Swiss Franc',\n  CLF: 'Chilean Unit of Account (UF)',\n  CLP: 'Chilean Peso',\n  CNY: 'Chinese Yuan',\n  COP: 'Colombian Peso',\n  CRC: 'Costa Rican Colón',\n  CUC: 'Cuban Convertible Peso',\n  CUP: 'Cuban Peso',\n  CZK: 'Czech Republic Koruna',\n  DJF: 'Djiboutian Franc',\n  DKK: 'Danish Krone',\n  DOP: 'Dominican Peso',\n  DZD: 'Algerian Dinar',\n  EGP: 'Egyptian Pound',\n  ERN: 'Eritrean Nakfa',\n  ETB: 'Ethiopian Birr',\n  EUR: 'Euro',\n  FJD: 'Fijian Dollar',\n  FKP: 'Falkland Islands Pound',\n  GBP: 'British Pound Sterling',\n  GEL: 'Georgian Lari',\n  GGP: 'Guernsey Pound',\n  GHS: 'Ghanaian Cedi',\n  GIP: 'Gibraltar Pound',\n  GMD: 'Gambian Dalasi',\n  GNF: 'Guinean Franc',\n  GTQ: 'Guatemalan Quetzal',\n  GYD: 'Guyanaese Dollar',\n  HKD: 'Hong Kong Dollar',\n  HNL: 'Honduran Lempira',\n  HRK: 'Croatian Kuna',\n  HTG: 'Haitian Gourde',\n  HUF: 'Hungarian Forint',\n  IDR: 'Indonesian Rupiah',\n  ILS: 'Israeli New Sheqel',\n  IMP: 'Manx pound',\n  INR: 'Indian Rupee',\n  IQD: 'Iraqi Dinar',\n  IRR: 'Iranian Rial',\n  ISK: 'Icelandic Króna',\n  JEP: 'Jersey Pound',\n  JMD: 'Jamaican Dollar',\n  JOD: 'Jordanian Dinar',\n  JPY: 'Japanese Yen',\n  KES: 'Kenyan Shilling',\n  KGS: 'Kyrgystani Som',\n  KHR: 'Cambodian Riel',\n  KMF: 'Comorian Franc',\n  KPW: 'North Korean Won',\n  KRW: 'South Korean Won',\n  KWD: 'Kuwaiti Dinar',\n  KYD: 'Cayman Islands Dollar',\n  KZT: 'Kazakhstani Tenge',\n  LAK: 'Laotian Kip',\n  LBP: 'Lebanese Pound',\n  LKR: 'Sri Lankan Rupee',\n  LRD: 'Liberian Dollar',\n  LSL: 'Lesotho Loti',\n  LTL: 'Lithuanian Litas',\n  LVL: 'Latvian Lats',\n  LYD: 'Libyan Dinar',\n  MAD: 'Moroccan Dirham',\n  MDL: 'Moldovan Leu',\n  MGA: 'Malagasy Ariary',\n  MKD: 'Macedonian Denar',\n  MMK: 'Myanma Kyat',\n  MNT: 'Mongolian Tugrik',\n  MOP: 'Macanese Pataca',\n  MRO: 'Mauritanian Ouguiya',\n  MUR: 'Mauritian Rupee',\n  MVR: 'Maldivian Rufiyaa',\n  MWK: 'Malawian Kwacha',\n  MXN: 'Mexican Peso',\n  MYR: 'Malaysian Ringgit',\n  MZN: 'Mozambican Metical',\n  NAD: 'Namibian Dollar',\n  NGN: 'Nigerian Naira',\n  NIO: 'Nicaraguan Córdoba',\n  NOK: 'Norwegian Krone',\n  NPR: 'Nepalese Rupee',\n  NZD: 'New Zealand Dollar',\n  OMR: 'Omani Rial',\n  PAB: 'Panamanian Balboa',\n  PEN: 'Peruvian Nuevo Sol',\n  PGK: 'Papua New Guinean Kina',\n  PHP: 'Philippine Peso',\n  PKR: 'Pakistani Rupee',\n  PLN: 'Polish Zloty',\n  PYG: 'Paraguayan Guarani',\n  QAR: 'Qatari Rial',\n  RON: 'Romanian Leu',\n  RSD: 'Serbian Dinar',\n  RUB: 'Russian Ruble',\n  RWF: 'Rwandan Franc',\n  SAR: 'Saudi Riyal',\n  SBD: 'Solomon Islands Dollar',\n  SCR: 'Seychellois Rupee',\n  SDG: 'Sudanese Pound',\n  SEK: 'Swedish Krona',\n  SGD: 'Singapore Dollar',\n  SHP: 'Saint Helena Pound',\n  SLL: 'Sierra Leonean Leone',\n  SOS: 'Somali Shilling',\n  SRD: 'Surinamese Dollar',\n  STD: 'São Tomé and Príncipe Dobra',\n  SVC: 'Salvadoran Colón',\n  SYP: 'Syrian Pound',\n  SZL: 'Swazi Lilangeni',\n  THB: 'Thai Baht',\n  TJS: 'Tajikistani Somoni',\n  TMT: 'Turkmenistani Manat',\n  TND: 'Tunisian Dinar',\n  TOP: 'Tongan Paʻanga',\n  TRY: 'Turkish Lira',\n  TTD: 'Trinidad and Tobago Dollar',\n  TWD: 'New Taiwan Dollar',\n  TZS: 'Tanzanian Shilling',\n  UAH: 'Ukrainian Hryvnia',\n  UGX: 'Ugandan Shilling',\n  USD: 'United States Dollar',\n  UYU: 'Uruguayan Peso',\n  UZS: 'Uzbekistan Som',\n  VEF: 'Venezuelan Bolívar Fuerte',\n  VND: 'Vietnamese Dong',\n  VUV: 'Vanuatu Vatu',\n  WST: 'Samoan Tala',\n  XAF: 'CFA Franc BEAC',\n  XAG: 'Silver (troy ounce)',\n  XAU: 'Gold (troy ounce)',\n  XCD: 'East Caribbean Dollar',\n  XDR: 'Special Drawing Rights',\n  XOF: 'CFA Franc BCEAO',\n  XPF: 'CFP Franc',\n  YER: 'Yemeni Rial',\n  ZAR: 'South African Rand',\n  ZMK: 'Zambian Kwacha (pre-2013)',\n  ZMW: 'Zambian Kwacha',\n  ZWL: 'Zimbabwean Dollar',\n};\n","import Form from 'components/Form/Form';\n\nconst HomePage = ({ current }) => {\n  return <Form currentCurrency={current} />;\n};\n\nexport default HomePage;\n"],"names":["myHeaders","Headers","append","requestOptions","method","redirect","headers","currency","Object","keys","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTC","BTN","BWP","BYN","BYR","BZD","CAD","CDF","CHF","CLF","CLP","CNY","COP","CRC","CUC","CUP","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XAG","XAU","XCD","XDR","XOF","XPF","YER","ZAR","ZMK","ZMW","ZWL","useState","loading","setLoading","value","setValue","from","setFrom","to","setTo","result","setResult","handleClick","fetch","then","response","json","catch","error","console","log","finally","Box","sx","display","flexDirection","alignItems","padding","Autocomplete","disablePortal","id","options","width","renderInput","params","TextField","label","onChange","e","target","textContent","mt","variant","mb","LoadingButton","size","endIcon","CurrencyExchange","loadingPosition","onClick","style","marginTop","Number","info","rate","toFixed","current","currentCurrency"],"sourceRoot":""}