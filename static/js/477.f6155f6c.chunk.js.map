{"version":3,"file":"static/js/477.f6155f6c.chunk.js","mappings":"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","sources":["headers/headers.js","components/Form/Form.jsx","pages/homePage.jsx"],"sourcesContent":["const myHeaders = new Headers();\nmyHeaders.append('apikey', '00c26d156ba3e67096ed04393f9b6fa3');\n\nconst requestOptions = {\n  method: 'GET',\n  redirect: 'follow',\n  headers: myHeaders,\n};\n\nexport default requestOptions;\n","import { Autocomplete, Box, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { CurrencyExchange } from '@mui/icons-material';\nimport { useState } from 'react';\nimport requestOptions from 'headers/headers';\n\nfunction Form({ currency, currentCurrency }) {\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState('');\n  const [from, setFrom] = useState('');\n  const [to, setTo] = useState('');\n  const [result, setResult] = useState(null);\n\n  const handleClick = async () => {\n    setLoading(true);\n    await fetch(\n      `https://api.apilayer.com/fixer/convert?to=${to}&from=${from}&amount=${value}`,\n      requestOptions\n    )\n      .then(response => response.json())\n      .then(result => {\n        setResult(result);\n        console.log(result);\n      })\n      .catch(error => console.log('error', error))\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          padding: 3,\n        }}\n      >\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={currency}\n          sx={{ width: 200 }}\n          renderInput={params => <TextField {...params} label=\"From\" />}\n          onChange={e => {\n            setFrom(e.target.textContent);\n          }}\n        />\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={currency}\n          sx={{ width: 200, mt: '10px' }}\n          renderInput={params => (\n            <TextField {...params} label={currentCurrency ?? 'To'} />\n          )}\n          onChange={e => {\n            setTo(e.target.textContent);\n          }}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Sum\"\n          variant=\"outlined\"\n          value={value}\n          sx={{ width: 200, mt: '10px', mb: '10px' }}\n          onChange={e => setValue(e.target.value)}\n        />\n        <LoadingButton\n          size=\"small\"\n          endIcon={<CurrencyExchange />}\n          loading={loading}\n          loadingPosition=\"end\"\n          variant=\"contained\"\n          onClick={handleClick}\n        >\n          Convert\n        </LoadingButton>\n\n        {result && (\n          <p style={{ marginTop: '10px' }}>Rate: {result?.info?.rate}</p>\n        )}\n        {result && <p>Result: {result?.result}</p>}\n      </Box>\n    </>\n  );\n}\n\nexport default Form;\n","import Form from 'components/Form/Form';\nimport { useEffect, useState } from 'react';\nimport requestOptions from 'headers';\n\nconst HomePage = ({ current }) => {\n  const [fetching, setFetching] = useState(false);\n  const [currency, setCurrency] = useState([]);\n\n  useEffect(() => {\n    setFetching(true);\n    fetch('https://api.apilayer.com/fixer/symbols', requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        const currency = Object.keys(result.symbols);\n        setCurrency(currency);\n      })\n      .catch(error => console.log('error', error))\n      .finally(() => {\n        setFetching(false);\n      });\n  }, []);\n\n  return (\n    <>\n      {fetching ? (\n        <div>Loading...</div>\n      ) : (\n        <Form currency={currency} currentCurrency={current} />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["myHeaders","Headers","append","method","redirect","headers","currency","currentCurrency","useState","loading","setLoading","value","setValue","from","setFrom","to","setTo","result","setResult","handleClick","fetch","requestOptions","then","response","json","console","log","catch","error","finally","Box","sx","display","flexDirection","alignItems","padding","Autocomplete","disablePortal","id","options","width","renderInput","params","TextField","label","onChange","e","target","textContent","mt","variant","mb","LoadingButton","size","endIcon","CurrencyExchange","loadingPosition","onClick","style","marginTop","info","rate","current","fetching","setFetching","setCurrency","useEffect","Object","keys","symbols"],"sourceRoot":""}